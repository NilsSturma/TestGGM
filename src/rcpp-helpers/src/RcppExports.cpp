// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calculate_Y
NumericMatrix calculate_Y(IntegerMatrix indices, NumericMatrix X1, NumericMatrix X2);
RcppExport SEXP _RcppHelpers_calculate_Y(SEXP indicesSEXP, SEXP X1SEXP, SEXP X2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X2(X2SEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_Y(indices, X1, X2));
    return rcpp_result_gen;
END_RCPP
}
// bootstrap_independent
NumericVector bootstrap_independent(int E, NumericVector standardizer, NumericMatrix Y_centered);
RcppExport SEXP _RcppHelpers_bootstrap_independent(SEXP ESEXP, SEXP standardizerSEXP, SEXP Y_centeredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type E(ESEXP);
    Rcpp::traits::input_parameter< NumericVector >::type standardizer(standardizerSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_centered(Y_centeredSEXP);
    rcpp_result_gen = Rcpp::wrap(bootstrap_independent(E, standardizer, Y_centered));
    return rcpp_result_gen;
END_RCPP
}
// bootstrap_dependent
NumericVector bootstrap_dependent(int E, int B, int omega, NumericVector standardizer, NumericMatrix Y_centered);
RcppExport SEXP _RcppHelpers_bootstrap_dependent(SEXP ESEXP, SEXP BSEXP, SEXP omegaSEXP, SEXP standardizerSEXP, SEXP Y_centeredSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type E(ESEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type standardizer(standardizerSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_centered(Y_centeredSEXP);
    rcpp_result_gen = Rcpp::wrap(bootstrap_dependent(E, B, omega, standardizer, Y_centered));
    return rcpp_result_gen;
END_RCPP
}
// fourth_mom
double fourth_mom(NumericMatrix S, int a, int b, int c, int d);
RcppExport SEXP _RcppHelpers_fourth_mom(SEXP SSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type S(SSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(fourth_mom(S, a, b, c, d));
    return rcpp_result_gen;
END_RCPP
}
// compute_cov_Y
NumericMatrix compute_cov_Y(NumericMatrix S, IntegerMatrix indices);
RcppExport SEXP _RcppHelpers_compute_cov_Y(SEXP SSEXP, SEXP indicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type S(SSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type indices(indicesSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_cov_Y(S, indices));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppHelpers_calculate_Y", (DL_FUNC) &_RcppHelpers_calculate_Y, 3},
    {"_RcppHelpers_bootstrap_independent", (DL_FUNC) &_RcppHelpers_bootstrap_independent, 3},
    {"_RcppHelpers_bootstrap_dependent", (DL_FUNC) &_RcppHelpers_bootstrap_dependent, 5},
    {"_RcppHelpers_fourth_mom", (DL_FUNC) &_RcppHelpers_fourth_mom, 5},
    {"_RcppHelpers_compute_cov_Y", (DL_FUNC) &_RcppHelpers_compute_cov_Y, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppHelpers(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
